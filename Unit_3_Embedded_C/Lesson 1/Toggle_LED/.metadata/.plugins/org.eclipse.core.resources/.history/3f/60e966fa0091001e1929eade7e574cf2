/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#define BASE_RCC 0x4002100
#define PORTA_BASE 0x40010800

#define RCC_APB2ENR *(volatile uint32_t*) (BASE_RCC + 0x18)
// 0x18 is the offset of base memory address
#define GPIOA_CHR *(volatile uint32_t*) (PORTA_BASE +0x04)
// general purpose input output port A
#define GPIOA_ODR *(volatile uint32_t*) (BASE_RCC + 0x0c)
// output data register

//#if !defined(__SOFT_FP__) && defined(__ARM_FP)
//  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
//#endif

int main(void)
{
	/* Loop forever */
	RCC_APB2ENR |=1<<2;
	GPIOA_CHR &= 0xff0ffff;
	GPIOA_CHR |= 0x00200000;
	while (1){

		GPIOA_ODR |=1<<13;
		// set 1 to a bit |= 1<<n
		for (int i =0 ; i < 5000 ;  i++)
			GPIOA_ODR &=~ (1<<13);
		// clear a bit &=~(1<<n)

	}
	return 0;
}
